"""
Routes for FIR document verification
"""

from flask import Blueprint, render_template, request, jsonify, abort
from models import FIR
import logging

# Configure logging
logger = logging.getLogger(__name__)

# Create blueprint
verification_bp = Blueprint('verification', __name__, url_prefix='/verify')

@verification_bp.route('/<fir_number>/<document_id>')
def verify_document(fir_number, document_id):
    """
    Verify the authenticity of an FIR document
    
    Args:
        fir_number: The FIR number
        document_id: The document ID
        
    Returns:
        Rendered template with verification result
    """
    try:
        # Check if the FIR exists
        fir = FIR.query.filter_by(fir_number=fir_number).first()
        
        if not fir:
            return render_template('verification/result.html', 
                                  is_valid=False, 
                                  message="FIR not found in the system.")
        
        # Verify document ID format
        if not document_id.startswith(f"DOC-{fir_number}-"):
            return render_template('verification/result.html', 
                                  is_valid=False, 
                                  message="Invalid document ID format.")
        
        # For now, we just verify that the document ID format is correct
        # In a production system, we would store document IDs in the database
        # and check against that
        
        return render_template('verification/result.html', 
                              is_valid=True, 
                              fir=fir,
                              document_id=document_id,
                              message="This document is authentic and was generated by the Intelligent FIR Filing System.")
                              
    except Exception as e:
        logger.error(f"Error verifying document: {str(e)}", exc_info=True)
        return render_template('verification/result.html', 
                              is_valid=False, 
                              message=f"An error occurred during verification: {str(e)}")
                              
@verification_bp.route('/api/<fir_number>/<document_id>')
def verify_document_api(fir_number, document_id):
    """
    API endpoint for document verification
    
    Args:
        fir_number: The FIR number
        document_id: The document ID
        
    Returns:
        JSON response with verification result
    """
    try:
        # Check if the FIR exists
        fir = FIR.query.filter_by(fir_number=fir_number).first()
        
        if not fir:
            return jsonify({
                'is_valid': False,
                'message': "FIR not found in the system."
            }), 404
        
        # Verify document ID format
        if not document_id.startswith(f"DOC-{fir_number}-"):
            return jsonify({
                'is_valid': False,
                'message': "Invalid document ID format."
            }), 400
        
        # For now, we just verify that the document ID format is correct
        
        return jsonify({
            'is_valid': True,
            'fir_number': fir_number,
            'document_id': document_id,
            'status': fir.status,
            'filed_at': fir.filed_at.isoformat() if fir.filed_at else None,
            'message': "This document is authentic and was generated by the Intelligent FIR Filing System."
        }), 200
                              
    except Exception as e:
        logger.error(f"Error verifying document API: {str(e)}", exc_info=True)
        return jsonify({
            'is_valid': False,
            'message': f"An error occurred during verification: {str(e)}"
        }), 500
